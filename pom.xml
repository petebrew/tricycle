<!--
  Copyright 2011 Peter Brewer and Daniel Murphy
  
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
    http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>DendroLibrary</artifactId>
		<groupId>org.tridas</groupId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<name>TRiCYCLE</name>
	<groupId>org.tridas.io.gui</groupId>
	<artifactId>TRiCYCLE</artifactId>
	<version>0.2.4</version>
	
	<!--  These values are written to build.properties -->
	<properties>
	   <!-- Copy of version number -->
	   <version>${project.version}</version> 
	   <!-- Manually set build number until SCM repository checked is working -->
	   <!-- <buildnumber>647</buildnumber>-->
	</properties>
	
	<developers>
		<developer>
			<id>dmurphy10</id>
			<name>Daniel Murphy</name>
			<email>daniel@dmurph.com</email>
		</developer>
		<developer>
			<id>sbr00pwb</id>
			<name>Peter Brewer</name>
			<email>p.brewer@cornell.edu</email>
		</developer>
	</developers>
	
	<repositories>
        <repository>
            <id>JBOSS</id>
            <name>JBoss Repository</name>
            <url>https://repository.jboss.org/nexus/content/groups/public</url>
        </repository>
	</repositories>
	
	<pluginRepositories>
		<pluginRepository>
			<id>codehaus</id>
			<url>http://repository.codehaus.org/</url>
		</pluginRepository>
		<pluginRepository>
          <id>tlc</id>
          <name>TLC Repository</name>
        <url>http://commons.ucalgary.ca/pub/m2</url>
    </pluginRepository>
    
		
	</pluginRepositories>
	<dependencies>
		<dependency>
  			<groupId>com.apple</groupId>
  			<artifactId>AppleJavaExtensions</artifactId>
 			<version>1.4</version>
		</dependency>
		
		<dependency>
			<groupId>org.tridas.io</groupId>
			<artifactId>DendroFileIO</artifactId>
			<version>0.1.3</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.dmurph.mvc</groupId>
			<artifactId>java-simple-mvc</artifactId>
			<version>1.3.3</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.6.1</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.6.1</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.miglayout</groupId>
			<artifactId>miglayout</artifactId>
			<version>3.7.4</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
	</dependencies>
	
	<!--  Subversion info -->
	<scm>
		<connection>scm:svn:svn+ssh://tridas.sf.net/svnroot/tridas</connection>
		<developerConnection>scm:svn:svn+ssh://tridas.sf.net/svnroot/tridas</developerConnection>
		<url>http://tridas.sf.net</url>
	</scm>
	
	<build>
		<plugins>
	
		<!-- Automatically adds build timestamp to build.properties file -->
		<plugin>
		  <groupId>org.codehaus.mojo</groupId>
		  <artifactId>groovy-maven-plugin</artifactId>
		  <version>1.3</version>
		  <executions>
		      <execution>
		          <phase>generate-resources</phase>
		          <goals>
		              <goal>execute</goal>
		          </goals>
		          <configuration>
		              <source>
		                      import java.util.Date
		                      import java.text.MessageFormat
		                      def timestamp = MessageFormat.format("{0,date,dd MMM yyyy, HH:mm }", new Date())
		                      project.properties['buildtimestamp'] = timestamp   
		              </source>
		          </configuration>
		      </execution>
		  </executions>
		</plugin>
		
		
		<plugin>
		  <groupId>org.codehaus.mojo</groupId>
		  <artifactId>buildnumber-maven-plugin</artifactId>
		  <executions>
		    <execution>
		      <phase>validate</phase>
		      <goals>
		        <goal>create</goal>
		      </goals>
		    </execution>
		  </executions>
		  <configuration>
		    <doCheck>false</doCheck>
		    <doUpdate>true</doUpdate>
		  </configuration>
		</plugin>
		
			<plugin>
				<inherited>true</inherited>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
					<optimise>true</optimise>
					<debug>true</debug>
				</configuration>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.3.1</version>
				<configuration>
					<archive>
						<manifest>
							<mainClass>org.tridas.io.gui.App</mainClass>G
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
						<manifestEntries>
							<SplashScreen-Image>icons/splash/splash.png</SplashScreen-Image>
							<SCM-Revision>${buildNumber}</SCM-Revision>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>

			
		  <!--  Use shade to create a single jar with all dependencies -->	
	      <plugin>
	        <groupId>org.apache.maven.plugins</groupId>
	        <artifactId>maven-shade-plugin</artifactId>
	        <version>1.3.3</version>
	        <executions>
	          <execution>
	            <phase>package</phase>
	            <goals>
	              <goal>shade</goal>
	            </goals>
	            <configuration>  
	              <transformers>
	                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
	                  <mainClass>org.tridas.io.gui.App</mainClass>
	                </transformer>
	              </transformers>
	              <filters>
	              	  <!-- Remove signatures from other jars-->
		              <filter>
		                  <artifact>*:*</artifact>
		                  <excludes>
		                    <exclude>META-INF/*.SF</exclude>
		                    <exclude>META-INF/*.DSA</exclude>
		                    <exclude>META-INF/*.RSA</exclude>
		                  </excludes>
	                  </filter>
                  </filters>
	              
	            </configuration>
	          </execution>
	        </executions>
	      </plugin>
		
			
	   <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>properties-maven-plugin</artifactId>
        <version>1.0-alpha-2</version>
        <executions>
          <execution>
            <phase>generate-resources</phase>
            <goals>
              <goal>write-project-properties</goal>
            </goals>
            <configuration>
              <outputFile>
                ${project.build.outputDirectory}/build.properties
              </outputFile>
            </configuration>
          </execution>
        </executions>
      </plugin>
			
			
			<!--  Create a Linux native installer -->
	        <plugin>
	            <artifactId>jdeb</artifactId>
	            <groupId>org.vafer</groupId>
	            <version>0.8</version>
	            <executions>
	                <execution>
	                    <phase>package</phase>
	                    <goals>
	                        <goal>jdeb</goal>
	                    </goals>
	                    <configuration>
	                        <dataSet>
	                            <data>
	                                <src>${project.build.directory}/${project.build.finalName}.jar</src>
	                                <type>file</type>
	                                <mapper>
	                                  <type>perm</type>
	                                  <prefix>/usr/share/tricycle</prefix>
	                                </mapper>
	                            </data>
	                            <data>
	                            	<src>lin-specific/tricycle</src>
	                            	<type>file</type>
	                            	<mapper>
	                            		<type>perm</type>
	                            		<prefix>/usr/bin/</prefix>
	                            		<filemode>755</filemode>
	                            	</mapper>
	                            </data>
	                           <data>
	                            	<src>lin-specific/tricycle.desktop</src>
	                            	<type>file</type>
	                            	<mapper>
	                            		<type>perm</type>
	                            		<prefix>/usr/share/applications/</prefix>
	                            		<filemode>755</filemode>
	                            	</mapper>
	                            </data>
	                            <data>
	                            	<src>src/main/resources/icons/48x48/tricycle.png</src>
	                            	<type>file</type>
	                            	<mapper>
	                            		<type>perm</type>
	                            		<prefix>/usr/share/pixmaps/</prefix>
	                            	</mapper>
	                            </data>
	                            <data>
	                            	<src>src/main/resources/icons/32x32/tricycle.xpm</src>
	                            	<type>file</type>
	                            	<mapper>
	                            		<type>perm</type>
	                            		<prefix>/usr/share/pixmaps/</prefix>
	                            	</mapper>
	                            </data>
	                        </dataSet>
	                    </configuration>
	                </execution>
	            </executions>
	        </plugin>
	        
	        <!--  Windows native executable -->
	        <plugin>
		      <groupId>org.bluestemsoftware.open.maven.plugin</groupId>
		      <artifactId>launch4j-plugin</artifactId>
		      <version>1.5.0.0</version>
		      <executions>
		        <execution>
		          <id>launch4j</id>
		          <phase>package</phase>
		          <goals>
		            <goal>launch4j</goal>
		          </goals>
		          <configuration>
		            <dontWrapJar>false</dontWrapJar>
		            <headerType>gui</headerType>
		            <outfile>${project.build.directory}/${project.build.finalName}.exe</outfile>
		            <jar>${project.build.directory}/${project.build.finalName}.jar</jar>
		            <icon>src/main/resources/icons/application.ico</icon>
		            <errTitle>TRiCYCLE</errTitle>
		            <jre>
		              <minVersion>1.6.0</minVersion>
		            </jre>
		          </configuration>
		        </execution>
		      </executions>
		    </plugin>
	        
	        
	        <!-- Create MacOSX native executable -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>osxappbundle-maven-plugin</artifactId>
				<version>1.0-alpha-2</version>
				<configuration>
					<additionalResources>
						<fileSet>
							<directory>${basedir}/package-includes</directory>
							<includes>
								<include>**</include>
							</includes>
						</fileSet>
						<fileSet>
							<directory>${basedir}/documentation/</directory>
							<includes>
								<include>tricycle-manual.pdf</include>
							</includes>
						</fileSet>
					</additionalResources>
					<bundleName>TRiCYCLE</bundleName>
					<zipFile>${project.build.directory}/${project.build.finalName}-app.zip</zipFile>
					<mainClass>org.tridas.io.gui.App</mainClass>
					<jvmVersion>1.5+</jvmVersion>
					<iconFile>${basedir}/src/main/resources/icons/application.icns</iconFile>
					<javaApplicationStub>${basedir}/mac-specific/JavaApplicationStub</javaApplicationStub>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>bundle</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
	        
		</plugins>
	</build>
</project>
